#if 0
;
; Note: shader requires additional functionality:
;       Typed UAV Load Additional Formats
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer Constants
; {
;
;   struct Constants
;   {
;
;       struct struct.AverageSamplesConstants
;       {
;
;           uint SampleCount;                         ; Offset:    0
;           uint Width;                               ; Offset:    4
;           uint Height;                              ; Offset:    8
;       
;       } Constants                                   ; Offset:    0
;
;   
;   } Constants                                       ; Offset:    0 Size:    12
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; Constants                         cbuffer      NA          NA     CB0            cb0     1
; AccumulatedBuffer                     UAV     f32          2d      U0             u0     1
; OutputBuffer                          UAV     f32          2d      U1             u1     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f:64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%Constants = type { %struct.AverageSamplesConstants }
%struct.AverageSamplesConstants = type { i32, i32, i32 }
%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }

@"\01?AccumulatedBuffer@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external global %"class.RWTexture2D<vector<float, 4> >", align 4
@"\01?OutputBuffer@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external global %"class.RWTexture2D<vector<float, 4> >", align 4
@Constants = external constant %Constants

define void @main() {
  %OutputBuffer_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %AccumulatedBuffer_UAV_2d = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %Constants_cbuffer = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %1 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %2 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %3 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %Constants_cbuffer, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %4 = extractvalue %dx.types.CBufRet.i32 %3, 1
  %5 = icmp uge i32 %1, %4
  %6 = extractvalue %dx.types.CBufRet.i32 %3, 2
  %7 = icmp uge i32 %2, %6
  %8 = or i1 %5, %7
  br i1 %8, label %17, label %9

; <label>:9                                       ; preds = %0
  %TextureLoad = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %AccumulatedBuffer_UAV_2d, i32 undef, i32 %1, i32 %2, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %10 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 0
  %11 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 1
  %12 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 2
  %13 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 3
  %14 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %Constants_cbuffer, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %15 = extractvalue %dx.types.CBufRet.i32 %14, 0
  %16 = uitofp i32 %15 to float
  %.i0 = fdiv fast float %10, %16
  %.i1 = fdiv fast float %11, %16
  %.i2 = fdiv fast float %12, %16
  %.i3 = fdiv fast float %13, %16
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %OutputBuffer_UAV_2d, i32 %1, i32 %2, i32 undef, float %.i0, float %.i1, float %.i2, float %.i3, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %17

; <label>:17                                      ; preds = %9, %0
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!11, !20}
!dx.entryPoints = !{!24}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 0}
!2 = !{i32 1, i32 3}
!3 = !{!"cs", i32 6, i32 0}
!4 = !{null, !5, !9, null}
!5 = !{!6, !8}
!6 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* undef, !"AccumulatedBuffer", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.RWTexture2D<vector<float, 4> >"* undef, !"OutputBuffer", i32 0, i32 1, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!9 = !{!10}
!10 = !{i32 0, %Constants* undef, !"Constants", i32 0, i32 0, i32 1, i32 12, null}
!11 = !{i32 0, %struct.AverageSamplesConstants undef, !12, %"class.RWTexture2D<vector<float, 4> >" undef, !16, %Constants undef, !18}
!12 = !{i32 12, !13, !14, !15}
!13 = !{i32 6, !"SampleCount", i32 3, i32 0, i32 7, i32 5}
!14 = !{i32 6, !"Width", i32 3, i32 4, i32 7, i32 5}
!15 = !{i32 6, !"Height", i32 3, i32 8, i32 7, i32 5}
!16 = !{i32 16, !17}
!17 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!18 = !{i32 12, !19}
!19 = !{i32 6, !"Constants", i32 3, i32 0}
!20 = !{i32 1, void ()* @main, !21}
!21 = !{!22}
!22 = !{i32 0, !23, !23}
!23 = !{}
!24 = !{void ()* @main, !"main", null, !4, !25}
!25 = !{i32 0, i64 8192, i32 4, !26}
!26 = !{i32 8, i32 8, i32 1}

#endif

const unsigned char g_pAverageSamples[] = {
  0x44, 0x58, 0x42, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0xec, 0x08, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
  0xd8, 0x00, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x6c, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x0c, 0x08, 0x00, 0x00, 0x60, 0x00, 0x05, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xf4, 0x07, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xfa, 0x01, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x14, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xa4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x52, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x91, 0x22, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x29, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62, 0xf8, 0xff, 0xff, 0xff,
  0xff, 0x01, 0x90, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x32, 0x22, 0x48, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x93, 0x22, 0xa4, 0x84, 0x04, 0x93, 0x22, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8a, 0x8c, 0x0b, 0x84, 0xa4, 0x4c,
  0x10, 0x78, 0x33, 0x00, 0xc3, 0x08, 0x04, 0x30, 0x13, 0x19, 0x8c, 0x03,
  0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xc8, 0xc2, 0x2d, 0xd0, 0x42,
  0x39, 0xe0, 0x03, 0x3d, 0xd4, 0x83, 0x3c, 0x94, 0x83, 0x1c, 0x90, 0x02,
  0x1f, 0xd8, 0x43, 0x39, 0x8c, 0x03, 0x3d, 0xbc, 0x83, 0x3c, 0xf0, 0x81,
  0x39, 0xb0, 0xc3, 0x3b, 0x84, 0x03, 0x3d, 0xb0, 0x01, 0x18, 0xd0, 0x81,
  0x1f, 0x80, 0x81, 0x1f, 0xa0, 0x20, 0x90, 0x98, 0x23, 0x00, 0x83, 0xf3,
  0xa4, 0x29, 0xa2, 0x84, 0xc9, 0xd7, 0x2a, 0x22, 0x02, 0x0c, 0x82, 0x05,
  0x98, 0x67, 0x21, 0x24, 0xce, 0x69, 0xa4, 0x09, 0x68, 0x26, 0x09, 0x0d,
  0x84, 0x90, 0x4b, 0x38, 0xa7, 0x91, 0x26, 0xa0, 0x99, 0x24, 0x14, 0x14,
  0x32, 0x23, 0x00, 0x25, 0x40, 0x94, 0xca, 0x40, 0x08, 0xa1, 0x75, 0xd4,
  0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12, 0x93,
  0x8f, 0xdc, 0x36, 0x22, 0x08, 0x21, 0x64, 0x8e, 0x00, 0x21, 0x77, 0xcf,
  0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0x1f, 0x02, 0xcd, 0xb0, 0x10, 0x28,
  0x78, 0x85, 0x68, 0x04, 0x12, 0x8a, 0x37, 0x0d, 0x97, 0x3f, 0x61, 0x0f,
  0x21, 0xf9, 0x2b, 0x21, 0xad, 0xc4, 0xe4, 0x17, 0xb7, 0x8d, 0x0a, 0x00,
  0x00, 0x20, 0x45, 0x99, 0x04, 0x12, 0x42, 0x08, 0x21, 0x84, 0x68, 0x59,
  0x10, 0x81, 0x84, 0x10, 0x00, 0x00, 0x70, 0x64, 0xe7, 0x08, 0x82, 0x62,
  0x40, 0xe2, 0x08, 0xc1, 0x94, 0x07, 0x02, 0xe6, 0x08, 0x40, 0x61, 0x0a,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xb0, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0xa0, 0x07, 0x76, 0x40,
  0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xa0,
  0xf3, 0x40, 0x06, 0x19, 0x32, 0x52, 0x44, 0x04, 0xa0, 0x04, 0x00, 0x4c,
  0x09, 0x00, 0x98, 0x1e, 0x00, 0xc0, 0x90, 0x27, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x02, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x08, 0x08,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x14,
  0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x2c, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x64, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x90, 0x05, 0x02, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0xe2,
  0x05, 0x08, 0x18, 0x40, 0x78, 0x04, 0x80, 0x48, 0x09, 0x8c, 0x00, 0x94,
  0x41, 0x31, 0x14, 0x41, 0x49, 0x14, 0x46, 0x39, 0x94, 0x42, 0x21, 0x14,
  0x44, 0x81, 0x50, 0x99, 0x01, 0x20, 0x33, 0x03, 0x40, 0x67, 0x06, 0x80,
  0xc6, 0x0c, 0x00, 0x89, 0x19, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x75, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44,
  0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b,
  0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81,
  0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04,
  0x62, 0x99, 0x20, 0x10, 0xcc, 0x06, 0x61, 0x20, 0x26, 0x08, 0x44, 0xb3,
  0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x13, 0x04, 0xc2, 0xd9, 0x30, 0x20,
  0x09, 0x31, 0x41, 0x18, 0x34, 0x46, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75,
  0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x13,
  0x04, 0xe2, 0x99, 0x20, 0x60, 0xca, 0x04, 0x81, 0x80, 0x36, 0x08, 0xc4,
  0xb3, 0x61, 0x21, 0x16, 0x86, 0x20, 0x86, 0xc6, 0x71, 0x1c, 0x88, 0xcc,
  0x53, 0x1d, 0x1d, 0x5c, 0x1d, 0x9d, 0x50, 0x9d, 0x99, 0x59, 0x99, 0xdc,
  0x86, 0x65, 0x58, 0x24, 0x62, 0x18, 0x1a, 0xc7, 0x71, 0xa0, 0x0d, 0x42,
  0x34, 0x4d, 0x10, 0x8e, 0x8c, 0xc9, 0xd0, 0x9b, 0xdb, 0x1c, 0x5d, 0x98,
  0x1b, 0xdd, 0xdc, 0x04, 0x81, 0x88, 0x36, 0x20, 0x44, 0x65, 0x11, 0xc4,
  0x70, 0x01, 0x1b, 0x02, 0x6c, 0x03, 0x01, 0x50, 0x19, 0x30, 0x41, 0x28,
  0x2e, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
  0x74, 0x13, 0x04, 0x42, 0x9a, 0x20, 0x10, 0xd3, 0x06, 0x23, 0xe1, 0x0c,
  0xa2, 0xf3, 0x58, 0x5c, 0xa5, 0x91, 0xd1, 0xa1, 0x4d, 0x10, 0x08, 0x6a,
  0x83, 0x91, 0x80, 0x81, 0x11, 0x06, 0x9d, 0x47, 0x03, 0xa9, 0x2c, 0xed,
  0x0c, 0x8d, 0x6e, 0x82, 0x40, 0x54, 0x1b, 0x8c, 0x64, 0x0c, 0x0c, 0x32,
  0xe8, 0xbc, 0x0d, 0xc4, 0xf5, 0x89, 0x41, 0x19, 0x4c, 0x10, 0x84, 0x6d,
  0x82, 0x40, 0x58, 0x0c, 0xd0, 0x36, 0x18, 0x49, 0x1a, 0x18, 0x44, 0xf7,
  0x6c, 0x10, 0xd0, 0x40, 0x0d, 0x26, 0x08, 0x06, 0xb6, 0x81, 0x48, 0x2c,
  0x83, 0xd8, 0x20, 0x5c, 0x6d, 0xb0, 0xe1, 0x20, 0x36, 0x33, 0x38, 0x83,
  0x35, 0x60, 0x03, 0x37, 0x98, 0x20, 0x28, 0xc3, 0x06, 0x60, 0xc3, 0x40,
  0xc4, 0x41, 0x1c, 0x6c, 0x08, 0xe4, 0x60, 0xc3, 0x30, 0xc0, 0xc1, 0x1c,
  0x90, 0x68, 0x0b, 0x4b, 0x73, 0x9b, 0x20, 0x70, 0xc9, 0x86, 0x81, 0x0c,
  0xc8, 0x60, 0xd8, 0x40, 0x10, 0x76, 0x10, 0x06, 0x77, 0xb0, 0xa1, 0x80,
  0x83, 0x3a, 0x00, 0x34, 0x3c, 0xa8, 0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92,
  0x46, 0x56, 0xe6, 0x46, 0x37, 0x25, 0x08, 0xaa, 0x90, 0xe1, 0xb9, 0xd8,
  0x95, 0xc9, 0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09, 0x88, 0x26, 0x64, 0x78,
  0x2e, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x02, 0xa3, 0x0e, 0x19,
  0x9e, 0xcb, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19,
  0xdb, 0x94, 0x20, 0x29, 0x43, 0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56,
  0x27, 0x37, 0x56, 0x36, 0x37, 0x25, 0xc8, 0x2a, 0x91, 0xe1, 0xb9, 0xd0,
  0xe5, 0xc1, 0x95, 0x05, 0xb9, 0xb9, 0xbd, 0xd1, 0x85, 0xd1, 0xa5, 0xbd,
  0xb9, 0xcd, 0x4d, 0x11, 0xdc, 0x60, 0x0e, 0xea, 0x90, 0xe1, 0xb9, 0x94,
  0xb9, 0xd1, 0xc9, 0xe5, 0x41, 0xbd, 0xa5, 0xb9, 0xd1, 0xcd, 0x4d, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xcc,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x74, 0x60, 0x07, 0x37, 0x90, 0x87, 0x72,
  0x98, 0x87, 0x77, 0xa8, 0x07, 0x79, 0x18, 0x87, 0x72, 0x70, 0x83, 0x70,
  0xa0, 0x07, 0x7a, 0x90, 0x87, 0x74, 0x10, 0x87, 0x7a, 0xa0, 0x87, 0x72,
  0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x66, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x44, 0x5c, 0x13, 0x15, 0x11,
  0xa5, 0x03, 0x0c, 0x7e, 0x71, 0xdb, 0x36, 0x40, 0x30, 0x00, 0xd2, 0x58,
  0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05, 0x11, 0x95,
  0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x8f, 0xdc, 0xb6, 0x21, 0x48,
  0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c,
  0x0b, 0x51, 0x01, 0x73, 0x10, 0xf8, 0x3d, 0xeb, 0x74, 0x78, 0x9d, 0x2e,
  0xac, 0x9b, 0xcd, 0x65, 0x39, 0x10, 0x38, 0xb3, 0xfe, 0x48, 0xd2, 0x2b,
  0xb5, 0x8c, 0xa7, 0xd7, 0xe5, 0x65, 0x19, 0x11, 0x68, 0xfd, 0x91, 0xec,
  0xe5, 0x31, 0xfd, 0x2d, 0x07, 0x36, 0x49, 0xb0, 0x19, 0x10, 0x08, 0x04,
  0x06, 0x8d, 0x40, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0xe9, 0x88, 0x08, 0x60,
  0x10, 0x07, 0x1f, 0xb9, 0x6d, 0x13, 0x48, 0x38, 0xa7, 0x91, 0x26, 0xa0,
  0x99, 0x24, 0x3b, 0xb0, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xae, 0x89,
  0x8a, 0x08, 0x76, 0x72, 0x22, 0xc2, 0x2f, 0x6e, 0xbb, 0x00, 0xf0, 0x20,
  0xf0, 0x0b, 0x8e, 0xc7, 0xf5, 0x76, 0x9d, 0x1d, 0xa6, 0x97, 0xc9, 0xc2,
  0xba, 0xd9, 0x5c, 0x96, 0x03, 0x81, 0x33, 0xeb, 0x8f, 0x24, 0xbd, 0x52,
  0xcb, 0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11, 0x81, 0xd6, 0x1f, 0xc9, 0x5e,
  0x1e, 0xd3, 0xdf, 0x72, 0x60, 0x93, 0x04, 0x9b, 0x01, 0x81, 0x40, 0x60,
  0x10, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00,
  0x13, 0x04, 0x43, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x44, 0x66, 0x00, 0x4a, 0xae, 0x74, 0x03, 0xca, 0xae, 0x08, 0x03, 0xca,
  0x30, 0x80, 0x5c, 0x09, 0x14, 0x41, 0x79, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x90, 0x75, 0xc8, 0xa0, 0x69, 0xdb, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x64, 0x5e, 0x42, 0x68, 0x1a, 0x37, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0xd9, 0xa7, 0x10, 0xdb, 0xd6, 0x8d, 0x18, 0x18, 0x00, 0x08,
  0x82, 0xc1, 0x42, 0x06, 0x0a, 0x37, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x4b, 0x19, 0x2c, 0xde, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x44, 0x65,
  0xb0, 0x0c, 0xde, 0x68, 0x42, 0x10, 0x0c, 0x37, 0x10, 0xc1, 0x18, 0x8c,
  0x26, 0x0c, 0xc2, 0x70, 0x43, 0x11, 0x8c, 0x41, 0x0d, 0xc1, 0xce, 0x32,
  0x08, 0x41, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x94, 0x1a, 0x40,
  0x0a, 0x85, 0x1c, 0x14, 0x45, 0x51, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20,
  0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x10, 0xc1, 0x81, 0xe5, 0xa4, 0xc1, 0x68, 0x42, 0x00, 0x5c,
  0x00, 0xca, 0x8e, 0x80, 0x3e, 0x76, 0x08, 0xf4, 0xb1, 0x63, 0xa0, 0x8f,
  0x1d, 0x04, 0x7d, 0x46, 0x0c, 0x1c, 0x00, 0x04, 0xc1, 0xc0, 0xaa, 0x83,
  0xed, 0xa2, 0x26, 0x30, 0x20, 0x06, 0x21, 0xc0, 0x66, 0x09, 0x04, 0x0c,
  0x07, 0x02, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x06, 0xb3, 0xb4, 0xc4,
  0x35, 0x51, 0x11, 0x51, 0x3a, 0xc0, 0x60, 0x26, 0x98, 0x26, 0x08, 0x14,
  0x43, 0x2d, 0xc0, 0x44, 0x0c, 0x1b, 0x55, 0x14, 0x44, 0xf4, 0xbb, 0xda,
  0xfb, 0xdb, 0x83, 0xe1, 0x0c, 0x3e, 0x42, 0x5b, 0xce, 0xe0, 0x23, 0xb5,
  0x9d, 0x44, 0x9c, 0xd3, 0x48, 0x13, 0xd0, 0x4c, 0xd2, 0x2f, 0x04, 0x54,
  0x51, 0x10, 0x91, 0xe9, 0x0c, 0x3e, 0x62, 0x5b, 0xc9, 0x84, 0x52, 0xd3,
  0x43, 0x4d, 0x1b, 0x55, 0x14, 0x44, 0xf4, 0xbb, 0xda, 0xfb, 0xdb, 0x83,
  0xed, 0x0c, 0x3e, 0x72, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
